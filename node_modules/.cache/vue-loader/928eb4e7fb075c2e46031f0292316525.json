{"remainingRequest":"/Users/tb/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tb/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tb/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tb/frontend/src/views/Helper/RegistrationHelper.vue?vue&type=template&id=fbc57dc4&scoped=true&","dependencies":[{"path":"/Users/tb/frontend/src/views/Helper/RegistrationHelper.vue","mtime":1615979178666},{"path":"/Users/tb/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tb/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tb/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tb/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}